Schedule
    Commence    : 9:00 AM
    Tea Break   : 10:30 AM (20 mins)
    Lunch Break : 12:30 PM (45 mins)
    Tea Break   : 3:00 PM (20 mins)
    Windup      : 5:00 PM

Methodology:
    No powerpoint presentation
    Atleast 50% of the class should have completed the assignment to move forward

Prerequisites:
    Proficient in JavaScript
    Proficient in React

Repository:
    http://github.com/tkmagesh/Nobleprog-AdvReact-Nov-2021-2

About You:
    Name
    Total Experience
    Primary skillset
    Experience in Redux (if any)
 
React
    Library for creating UI
    Composition of components
    component = encapsulation of Presentation + UI Behavior + State
    Responsibility of a component is to synchronize the state changes in the UI

react.js
react-dom.js
babel.js


State
    1. UI State
        Data that supports the "Presentational" needs of the application
        Highly unlikely that this data is needed in other parts of the application
        Feel free to maintain this in the compnent using the 'useState' hook

    2. App State
        Data that supports the "Business Logic" needs of the application
        Highly LIKELY that this data is needed in other parts of the application
        DONOT maintain this data in the component

node --version

To instal "yarn" package manager
    npm install yarn -g

To create a react application
    yarn create react-app <app-name>

To run the application
    cd <app-name>
    yarn start

Application folder structure
For the bugs module
    /src
        /bugs
            /actions
                /addNew.js
                /toggle.js
                /remove.js
                /removeClosed.js
                /index.js
            /reducers
                /bugsReducer.js
            /components
                /BugItem.js
                /BugList.js
                /BugEdit.js
                /BugSort.js
                /BugStats.js
            /index.js => Bugs Component
        
        /store
            /index.js

        /index.js

To install redux
    yarn add redux


Implement the 'Projects' module in the application with the following use cases
    1. Add a new project
    2. List the added projects

    Create the required actions, reducers & components

react-redux
    to install
        yarn add react-redux

    to use
        Provider

        useDispatch() => gives the dispatch reference from the store
        useSelector() => gives the state reference from the store


Container / Smart components
    Interact with the redux infrastructure for extracting state and dispatch
    NOT responsible for presentation
    It advisable to have fewer container components
    ex., Projects, Bugs

Presentational / Dumb components
    Responsible for presentation
    NOT responsible for interact with the redux infrastructure
    Receive the state and the action dispatchers from the "Container/Smart" components
    It is advisable to have more presentational components
    ex., BugItem, BugList, BugEdit, BugSort, BugStats

Assignment
    Associate every newly created bug with an existing project (add 'projectId' attribute to the bug object)
    Display the 'project name' for each bug












